<?php

namespace Symfony\WebsiteBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends EntityRepository
{
    public function loadPrevComments($imageId, $firstId) {

        $q = $this->createQueryBuilder('comm');
        $q->select('comm')
          ->where('comm.pictureId = :imageId')
          ->andWhere('comm.id < :firstId')
          ->setParameter('imageId', $imageId)
          ->setParameter('firstId', $firstId)
          ->orderBy('comm.id', 'DESC')
          ->setMaxResults(4)
          ->getQuery();
    
        try {
            // The Query::getSingleResult() method throws an exception
            // if there is no record matching the criteria.
            $comment = $q->getQuery()->getResult();
        } catch (NoResultException $e) {
            $message = sprintf(
                'Unable to find an active admin SymfonyWebsiteBundle:User object identified by "%s".',
                $nr
            );
            throw new UsernameNotFoundException($message, 0, $e);
        }

        return $comment;
   }
    public function refreshUser(UserInterface $comment)
    {
        $class = get_class($comment);
        if (!$this->supportsClass($class)) {
            throw new UnsupportedUserException(
                sprintf(
                    'Instances of "%s" are not supported.',
                    $class
                )
            );
        }

        return $this->find($comment->getId());
    }

    public function supportsClass($class)
    {
        return $class === 'Symfony\WebsiteBundle\Entity\Comment';
    }
}
